{"version":3,"sources":["helpers/helpers.js","App.js","reportWebVitals.js","index.js"],"names":["generateId","Math","random","toString","substr","App","React","useState","todos","setTodos","input","setInput","className","type","value","placeholder","onChange","e","target","onClick","concat","text","id","map","filter","t","removeTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAIeA,MAJf,WACC,MAAO,IAAMC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,ICwCpCC,MArCf,WAAgB,IAAD,EACaC,IAAMC,SAAS,IAD5B,mBACNC,EADM,KACCC,EADD,OAEYH,IAAMC,SAAS,IAF3B,mBAEPG,EAFO,KAEAC,EAFA,KAgBd,OACC,sBAAKC,UAAU,MAAf,UACC,uBACCC,KAAK,OACLC,MAAOJ,EACPK,YAAY,WACZC,SAAU,SAACC,GAAD,OAAON,EAASM,EAAEC,OAAOJ,UAEpC,wBAAQK,QArBW,WACpBV,GAAS,SAACD,GAAD,OACRA,EAAMY,OAAO,CACZC,KAAMX,EACNY,GAAItB,SAGNW,EAAS,KAcR,oBACA,6BACEH,EAAMe,KAAI,gBAAGF,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACV,+BACC,+BAAOD,IACP,wBAAQF,QAAS,kBAhBH,SAACG,GAAD,OAClBb,GAAS,SAACD,GAAD,OAAWA,EAAMgB,QAAO,SAACC,GAAD,OAAOA,EAAEH,KAAOA,QAetBI,CAAWJ,IAAlC,iBAFQA,YCnBCK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.41e7edee.chunk.js","sourcesContent":["function generateId() {\n\treturn '_' + Math.random().toString(36).substr(2, 9);\n}\n\nexport default generateId;\n","import React from 'react';\nimport './App.css';\nimport generateId from './helpers/helpers';\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n\tconst [input, setInput] = React.useState('');\n\tconst handleSubmit = () => {\n\t\tsetTodos((todos) =>\n\t\t\ttodos.concat({\n\t\t\t\ttext: input,\n\t\t\t\tid: generateId(),\n\t\t\t})\n\t\t);\n\t\tsetInput('');\n\t};\n\n\tconst removeTodo = (id) =>\n\t\tsetTodos((todos) => todos.filter((t) => t.id !== id));\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tvalue={input}\n\t\t\t\tplaceholder='new todo'\n\t\t\t\tonChange={(e) => setInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<button onClick={handleSubmit}>Submit</button>\n\t\t\t<ul>\n\t\t\t\t{todos.map(({ text, id }) => (\n\t\t\t\t\t<li key={id}>\n\t\t\t\t\t\t<span>{text}</span>\n\t\t\t\t\t\t<button onClick={() => removeTodo(id)}>x</button>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}